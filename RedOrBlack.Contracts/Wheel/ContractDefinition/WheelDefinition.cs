using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;
using System.Threading;

namespace RedOrBlack.Contracts.Wheel.ContractDefinition
{


    public partial class WheelDeployment : WheelDeploymentBase
    {
        public WheelDeployment() : base(BYTECODE) { }
        public WheelDeployment(string byteCode) : base(byteCode) { }
    }

    public class WheelDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = "";
        public WheelDeploymentBase() : base(BYTECODE) { }
        public WheelDeploymentBase(string byteCode) : base(byteCode) { }
        [Parameter("uint64", "subscriptionId", 1)]
        public virtual ulong SubscriptionId { get; set; }
    }

    public partial class CalculateExposureFunction : CalculateExposureFunctionBase { }

    [Function("calculateExposure", "uint256")]
    public class CalculateExposureFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "spinId", 1)]
        public virtual BigInteger SpinId { get; set; }
    }

    public partial class CloseAccountFunction : CloseAccountFunctionBase { }

    [Function("closeAccount")]
    public class CloseAccountFunctionBase : FunctionMessage
    {

    }

    public partial class CurrentBalanceFunction : CurrentBalanceFunctionBase { }

    [Function("currentBalance", "uint256")]
    public class CurrentBalanceFunctionBase : FunctionMessage
    {

    }

    public partial class FundFunction : FundFunctionBase { }

    [Function("fund")]
    public class FundFunctionBase : FunctionMessage
    {

    }

    public partial class GetBetsForSpinFunction : GetBetsForSpinFunctionBase { }

    [Function("getBetsForSpin", typeof(GetBetsForSpinOutputDTO))]
    public class GetBetsForSpinFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "spinId", 1)]
        public virtual BigInteger SpinId { get; set; }
    }

    public partial class GetCurrentBetsFunction : GetCurrentBetsFunctionBase { }

    [Function("getCurrentBets", typeof(GetCurrentBetsOutputDTO))]
    public class GetCurrentBetsFunctionBase : FunctionMessage
    {

    }

    public partial class GetCurrentValueFunction : GetCurrentValueFunctionBase { }

    [Function("getCurrentValue", "uint256")]
    public class GetCurrentValueFunctionBase : FunctionMessage
    {

    }

    public partial class IsOpenForWithdrawlFunction : IsOpenForWithdrawlFunctionBase { }

    [Function("isOpenForWithdrawl", "bool")]
    public class IsOpenForWithdrawlFunctionBase : FunctionMessage
    {

    }

    public partial class MinbetinsideFunction : MinbetinsideFunctionBase { }

    [Function("minbetinside", "uint256")]
    public class MinbetinsideFunctionBase : FunctionMessage
    {

    }

    public partial class MinbetoutsideFunction : MinbetoutsideFunctionBase { }

    [Function("minbetoutside", "uint256")]
    public class MinbetoutsideFunctionBase : FunctionMessage
    {

    }

    public partial class MindepositFunction : MindepositFunctionBase { }

    [Function("mindeposit", "uint256")]
    public class MindepositFunctionBase : FunctionMessage
    {

    }

    public partial class OpenAccountFunction : OpenAccountFunctionBase { }

    [Function("openAccount")]
    public class OpenAccountFunctionBase : FunctionMessage
    {
        [Parameter("string", "nick", 1)]
        public virtual string Nick { get; set; }
    }

    public partial class OpenBetsFunction : OpenBetsFunctionBase { }

    [Function("openBets", "uint256")]
    public class OpenBetsFunctionBase : FunctionMessage
    {

    }

    public partial class OwnerFunction : OwnerFunctionBase { }

    [Function("owner", "address")]
    public class OwnerFunctionBase : FunctionMessage
    {

    }

    public partial class Place18BetFunction : Place18BetFunctionBase { }

    [Function("place18Bet")]
    public class Place18BetFunctionBase : FunctionMessage
    {
        [Parameter("uint8", "which18", 1)]
        public virtual byte Which18 { get; set; }
        [Parameter("uint256", "amount", 2)]
        public virtual BigInteger Amount { get; set; }
    }

    public partial class PlaceColorBetFunction : PlaceColorBetFunctionBase { }

    [Function("placeColorBet")]
    public class PlaceColorBetFunctionBase : FunctionMessage
    {
        [Parameter("uint8", "color", 1)]
        public virtual byte Color { get; set; }
        [Parameter("uint256", "amount", 2)]
        public virtual BigInteger Amount { get; set; }
    }

    public partial class PlaceColumnBetFunction : PlaceColumnBetFunctionBase { }

    [Function("placeColumnBet")]
    public class PlaceColumnBetFunctionBase : FunctionMessage
    {
        [Parameter("uint8", "column", 1)]
        public virtual byte Column { get; set; }
        [Parameter("uint256", "amount", 2)]
        public virtual BigInteger Amount { get; set; }
    }

    public partial class PlaceDozenBetFunction : PlaceDozenBetFunctionBase { }

    [Function("placeDozenBet")]
    public class PlaceDozenBetFunctionBase : FunctionMessage
    {
        [Parameter("uint8", "whichDozen", 1)]
        public virtual byte WhichDozen { get; set; }
        [Parameter("uint256", "amount", 2)]
        public virtual BigInteger Amount { get; set; }
    }

    public partial class PlaceParityBetFunction : PlaceParityBetFunctionBase { }

    [Function("placeParityBet")]
    public class PlaceParityBetFunctionBase : FunctionMessage
    {
        [Parameter("uint8", "parity", 1)]
        public virtual byte Parity { get; set; }
        [Parameter("uint256", "amount", 2)]
        public virtual BigInteger Amount { get; set; }
    }

    public partial class PlaceRowBetFunction : PlaceRowBetFunctionBase { }

    [Function("placeRowBet")]
    public class PlaceRowBetFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "amount", 1)]
        public virtual BigInteger Amount { get; set; }
    }

    public partial class PlaceSplitBetFunction : PlaceSplitBetFunctionBase { }

    [Function("placeSplitBet")]
    public class PlaceSplitBetFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "number1", 1)]
        public virtual BigInteger Number1 { get; set; }
        [Parameter("uint256", "number2", 2)]
        public virtual BigInteger Number2 { get; set; }
        [Parameter("uint256", "amount", 3)]
        public virtual BigInteger Amount { get; set; }
    }

    public partial class PlaceStraightUpBetFunction : PlaceStraightUpBetFunctionBase { }

    [Function("placeStraightUpBet")]
    public class PlaceStraightUpBetFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "numberId", 1)]
        public virtual BigInteger NumberId { get; set; }
        [Parameter("uint256", "amount", 2)]
        public virtual BigInteger Amount { get; set; }
    }

    public partial class PlaceStreetBetFunction : PlaceStreetBetFunctionBase { }

    [Function("placeStreetBet")]
    public class PlaceStreetBetFunctionBase : FunctionMessage
    {
        [Parameter("uint8", "street", 1)]
        public virtual byte Street { get; set; }
        [Parameter("uint256", "amount", 2)]
        public virtual BigInteger Amount { get; set; }
    }

    public partial class PlaceTopLineBetFunction : PlaceTopLineBetFunctionBase { }

    [Function("placeTopLineBet")]
    public class PlaceTopLineBetFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "amount", 1)]
        public virtual BigInteger Amount { get; set; }
    }

    public partial class RawFulfillRandomWordsFunction : RawFulfillRandomWordsFunctionBase { }

    [Function("rawFulfillRandomWords")]
    public class RawFulfillRandomWordsFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "requestId", 1)]
        public virtual BigInteger RequestId { get; set; }
        [Parameter("uint256[]", "randomWords", 2)]
        public virtual List<BigInteger> RandomWords { get; set; }
    }

    public partial class RenounceOwnershipFunction : RenounceOwnershipFunctionBase { }

    [Function("renounceOwnership")]
    public class RenounceOwnershipFunctionBase : FunctionMessage
    {

    }

    public partial class SpinTheWheelFunction : SpinTheWheelFunctionBase { }

    [Function("spinTheWheel")]
    public class SpinTheWheelFunctionBase : FunctionMessage
    {

    }

    public partial class TransferOwnershipFunction : TransferOwnershipFunctionBase { }

    [Function("transferOwnership")]
    public class TransferOwnershipFunctionBase : FunctionMessage
    {
        [Parameter("address", "newOwner", 1)]
        public virtual string NewOwner { get; set; }
    }

    public partial class WidthdrawFundFunction : WidthdrawFundFunctionBase { }

    [Function("widthdrawFund")]
    public class WidthdrawFundFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "amount", 1)]
        public virtual BigInteger Amount { get; set; }
    }

    public partial class WithdrawFunction : WithdrawFunctionBase { }

    [Function("withdraw")]
    public class WithdrawFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "amount", 1)]
        public virtual BigInteger Amount { get; set; }
    }

    public partial class OwnershipTransferredEventDTO : OwnershipTransferredEventDTOBase { }

    [Event("OwnershipTransferred")]
    public class OwnershipTransferredEventDTOBase : IEventDTO
    {
        [Parameter("address", "previousOwner", 1, true )]
        public virtual string PreviousOwner { get; set; }
        [Parameter("address", "newOwner", 2, true )]
        public virtual string NewOwner { get; set; }
    }

    public partial class AccountExistsError : AccountExistsErrorBase { }
    [Error("AccountExists")]
    public class AccountExistsErrorBase : IErrorDTO
    {
    }

    public partial class AccountNotFoundError : AccountNotFoundErrorBase { }
    [Error("AccountNotFound")]
    public class AccountNotFoundErrorBase : IErrorDTO
    {
    }

    public partial class BetsNotClosedError : BetsNotClosedErrorBase { }
    [Error("BetsNotClosed")]
    public class BetsNotClosedErrorBase : IErrorDTO
    {
    }

    public partial class InsufficentFundsError : InsufficentFundsErrorBase { }
    [Error("InsufficentFunds")]
    public class InsufficentFundsErrorBase : IErrorDTO
    {
    }

    public partial class InvalidBetError : InvalidBetErrorBase { }
    [Error("InvalidBet")]
    public class InvalidBetErrorBase : IErrorDTO
    {
    }

    public partial class InvalidBetAmountError : InvalidBetAmountErrorBase { }

    [Error("InvalidBetAmount")]
    public class InvalidBetAmountErrorBase : IErrorDTO
    {
        [Parameter("bool", "tooHigh", 1)]
        public virtual bool TooHigh { get; set; }
    }

    public partial class IsNotOpenForWithdrawlError : IsNotOpenForWithdrawlErrorBase { }
    [Error("IsNotOpenForWithdrawl")]
    public class IsNotOpenForWithdrawlErrorBase : IErrorDTO
    {
    }

    public partial class MoreFundsRequiredError : MoreFundsRequiredErrorBase { }
    [Error("MoreFundsRequired")]
    public class MoreFundsRequiredErrorBase : IErrorDTO
    {
    }

    public partial class NotEnoughTimePassedError : NotEnoughTimePassedErrorBase { }
    [Error("NotEnoughTimePassed")]
    public class NotEnoughTimePassedErrorBase : IErrorDTO
    {
    }

    public partial class OnlyCoordinatorCanFulfillError : OnlyCoordinatorCanFulfillErrorBase { }

    [Error("OnlyCoordinatorCanFulfill")]
    public class OnlyCoordinatorCanFulfillErrorBase : IErrorDTO
    {
        [Parameter("address", "have", 1)]
        public virtual string Have { get; set; }
        [Parameter("address", "want", 2)]
        public virtual string Want { get; set; }
    }

    public partial class OwnableInvalidOwnerError : OwnableInvalidOwnerErrorBase { }

    [Error("OwnableInvalidOwner")]
    public class OwnableInvalidOwnerErrorBase : IErrorDTO
    {
        [Parameter("address", "owner", 1)]
        public virtual string Owner { get; set; }
    }

    public partial class OwnableUnauthorizedAccountError : OwnableUnauthorizedAccountErrorBase { }

    [Error("OwnableUnauthorizedAccount")]
    public class OwnableUnauthorizedAccountErrorBase : IErrorDTO
    {
        [Parameter("address", "account", 1)]
        public virtual string Account { get; set; }
    }

    public partial class ReentrancyGuardReentrantCallError : ReentrancyGuardReentrantCallErrorBase { }
    [Error("ReentrancyGuardReentrantCall")]
    public class ReentrancyGuardReentrantCallErrorBase : IErrorDTO
    {
    }

    public partial class SpinClosedForBetsError : SpinClosedForBetsErrorBase { }
    [Error("SpinClosedForBets")]
    public class SpinClosedForBetsErrorBase : IErrorDTO
    {
    }

    public partial class SpinNotFoundError : SpinNotFoundErrorBase { }
    [Error("SpinNotFound")]
    public class SpinNotFoundErrorBase : IErrorDTO
    {
    }

    public partial class TransferFailedError : TransferFailedErrorBase { }
    [Error("TransferFailed")]
    public class TransferFailedErrorBase : IErrorDTO
    {
    }

    public partial class CalculateExposureOutputDTO : CalculateExposureOutputDTOBase { }

    [FunctionOutput]
    public class CalculateExposureOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }



    public partial class CurrentBalanceOutputDTO : CurrentBalanceOutputDTOBase { }

    [FunctionOutput]
    public class CurrentBalanceOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }



    public partial class GetBetsForSpinOutputDTO : GetBetsForSpinOutputDTOBase { }

    [FunctionOutput]
    public class GetBetsForSpinOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("tuple[]", "", 1)]
        public virtual List<Bet> ReturnValue1 { get; set; }
    }

    public partial class GetCurrentBetsOutputDTO : GetCurrentBetsOutputDTOBase { }

    [FunctionOutput]
    public class GetCurrentBetsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("tuple[]", "", 1)]
        public virtual List<Bet> ReturnValue1 { get; set; }
    }

    public partial class GetCurrentValueOutputDTO : GetCurrentValueOutputDTOBase { }

    [FunctionOutput]
    public class GetCurrentValueOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class IsOpenForWithdrawlOutputDTO : IsOpenForWithdrawlOutputDTOBase { }

    [FunctionOutput]
    public class IsOpenForWithdrawlOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class MinbetinsideOutputDTO : MinbetinsideOutputDTOBase { }

    [FunctionOutput]
    public class MinbetinsideOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class MinbetoutsideOutputDTO : MinbetoutsideOutputDTOBase { }

    [FunctionOutput]
    public class MinbetoutsideOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class MindepositOutputDTO : MindepositOutputDTOBase { }

    [FunctionOutput]
    public class MindepositOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }





    public partial class OwnerOutputDTO : OwnerOutputDTOBase { }

    [FunctionOutput]
    public class OwnerOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }
































}
